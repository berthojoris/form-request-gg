/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/admin_ticket.js":
/*!**************************************!*\
  !*** ./resources/js/admin_ticket.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("jQuery(function () {\n  $('#tbl_ticket').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + '/data/ticket',\n    order: [[0, \"desc\"]],\n    language: {\n      processing: \"<img src='assets/loading.svg'>\"\n    },\n    columns: [{\n      data: 'id',\n      visible: false,\n      searchable: false\n    }, {\n      data: 'status',\n      render: function render(data, type, row) {\n        if (data == 'CLOSE') {\n          return \"<span class='badge badge-danger badge-lg'>\" + data + \"</span>\";\n        } else {\n          return \"<span class='badge badge-info badge-lg'>\" + data + \"</span>\";\n        }\n      }\n    }, {\n      data: 'project_id'\n    }, {\n      data: 'project_name'\n    }, {\n      data: 'departemen_request'\n    }, {\n      data: 'pic_request',\n      sortable: false\n    }, {\n      data: 'userDestination',\n      name: 'userDestination.name',\n      sortable: false\n    }]\n  });\n\n  function buildArrayData(payload) {\n    if (_.isArray(payload)) {\n      var html = \"\";\n\n      _.forEach(payload, function (value) {\n        html += \"<li> <i class='wb-check' aria-hidden='true'></i>\" + value + \"</li>\";\n      });\n\n      return \"<ul class='list-icons'>\" + html + \"</ul>\";\n    }\n  }\n\n  $('#tbl_ticket').on('click', 'tr', function () {\n    var projectID = $('td', this).eq(1).text();\n    alertify.success('OPEN PROJECT ID <b>' + projectID + '</b>');\n    $.ajax({\n      type: \"POST\",\n      url: route('detailTicket', projectID),\n      dataType: \"json\",\n      data: {\n        pid: projectID\n      },\n      success: function success(response) {\n        $(\"#ticket_id\").val(response.id);\n        $(\"#req_status\").html(\"<span class='badge badge-info badge-lg'>\" + response.status + \"</span>\");\n        $(\"#req_project_id\").html(response.project_id);\n        $(\"#req_project_name\").html(response.project_name);\n        $(\"#req_departmen_request\").html(response.departemen_request);\n        $(\"#req_pic_request\").html(response.pic_request);\n        $(\"#req_pic_target\").html(response.user_destination.name);\n        $(\"#req_email\").html(response.email_submited);\n        $(\"#req_digital_assets\").html(buildArrayData(response.digital_asset));\n        $(\"#req_background\").html(response.background);\n        $(\"#req_objective\").html(response.objective);\n        $(\"#req_audience\").html(response.target_audience);\n        $(\"#req_creative_consideration\").html(response.creative_consideration);\n        $(\"#req_support_other_channel\").html(response.support_other_channel);\n        $(\"#req_kpi\").html(response.kpi);\n        $(\"#req_requirement_rules\").html(response.requirement_rules);\n        $(\"#req_reference\").html(response.reference);\n        $(\"#req_project_brief\").html(\"<a href='\" + route('downloadRequestFile', response.project_brief) + \"' target='_blank'>\" + response.project_brief + \"</a>\");\n        $(\"#req_campaign_start\").html(moment(response.campaign_period_start).format(\"MMM Do YY\"));\n        $(\"#req_campaign_end\").html(moment(response.campaign_period_end).format(\"MMM Do YY\"));\n        $(\"#req_estimated_budget\").html(\"Rp.\" + $.number(response.estimated_budget, 0, '.', '.'));\n\n        if (_.isEmpty(response.document_upload)) {\n          $(\"#req_document_upload\").html(\"-\");\n        } else {\n          $(\"#req_document_upload\").html(\"<a href='\" + route('downloadRequestFile', response.document_upload) + \"' target='_blank'>\" + response.document_upload + \"</a>\");\n        }\n\n        $('#modal_detail_request').modal({\n          backdrop: 'static',\n          keyboard: false\n        });\n      },\n      error: function error(err) {\n        if (err.status === 404) {\n          showMsg(\"Notification\", \"Data not found\" + err.status, \"error\");\n        } else {\n          showMsg(\"Notification\", \"Something wrong. Error code \" + err.status, \"error\");\n        }\n      }\n    });\n    $(\"#pid\").html(projectID);\n    $(\"#projectID\").val(projectID);\n  });\n  $('#modal_detail_request').on('hide.bs.modal', function () {\n    $('.invalid-feedback').empty();\n    $('.invalid-feedback').hide();\n    $(\"#upFile\").val('');\n    $(\"#note\").val('');\n    $('[href=\"#tabDetailRequest\"]').tab('show');\n    $(\"select#status\").prop('selectedIndex', 0);\n  }); //https://github.com/msurguy/ladda-bootstrap\n\n  $(\"#form_create_history\").on('submit', function (e) {\n    e.preventDefault();\n    $(\"#btnSubmitHistory\").prop(\"disabled\", true).html(\"Submiting....\");\n    $('.invalid-feedback').empty();\n    $('.invalid-feedback').hide();\n    $.ajax({\n      type: \"POST\",\n      url: route('createDetail'),\n      data: new FormData(this),\n      dataType: \"json\",\n      contentType: false,\n      cache: false,\n      processData: false,\n      success: function success(response) {\n        resetForm();\n        showMsg(\"Notification\", response.msg, \"success\");\n        $(\"#btnSubmitHistory\").prop(\"disabled\", false).html(\"Save\");\n      },\n      error: function error(err) {\n        if (err.status === 422) {\n          $('.invalid-feedback').show();\n          var errors = $.parseJSON(err.responseText);\n          $.each(errors.errors, function (key, val) {\n            $(\"#\" + key + \"_error\").html(val[0]);\n          });\n        } else if (err.status === 404) {\n          resetForm();\n          showMsg(\"Notification\", \"Data not found\" + err.status, \"error\");\n        } else if (err.status === 500) {\n          resetForm();\n          showMsg(\"Notification\", \"Something wrong. Error code \" + err.status, \"error\");\n        }\n\n        $(\"#btnSubmitHistory\").prop(\"disabled\", false).html(\"Save\");\n      }\n    });\n  });\n});\n\nfunction resetForm() {\n  $(\"select\").prop('selectedIndex', 0);\n  $(':input').not(':button, :submit, :reset, :hidden, select').val('').prop('checked', false);\n}\n\n$('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n  $('.invalid-feedback').empty();\n  $('.invalid-feedback').hide();\n  var target = $(e.target).attr(\"href\");\n\n  if (target == '#tabHistoryRequest') {\n    loadHistoryManual($(\"#projectID\").val());\n  }\n});\n\nfunction statusBuilder(status) {\n  var className = '';\n\n  if (status == \"ON_PROGRESS\") {\n    className = 'badge-success';\n  } else if (status == \"PENDING\") {\n    className = 'badge-warning';\n  } else if (status == \"CANCELED\") {\n    className = 'badge-danger';\n  } else {\n    className = 'badge-info';\n  }\n\n  var html = '<b><span class=\"badge ' + className + ' badge-lg\">' + status + '</span></b>';\n  return html;\n}\n\nfunction attachmentFile(fileName) {\n  if (!_.isEmpty(fileName)) {\n    return '<div class=\"alert alert-success\" role=\"alert\">\\\r\n                    <a href=\"' + route('downloadHistoryFile', fileName) + '\" target=\"_blank\">Download Attachment File</a>\\\r\n                </div>';\n  } else {\n    return \"\";\n  }\n}\n\nfunction loadHistoryManual(pid) {\n  $(\"#dataHistory\").empty();\n  $(\"#loadingHistory\").removeClass(\"hidden-xxl-down\");\n  $.ajax({\n    type: \"POST\",\n    url: route('detailTicket'),\n    dataType: \"json\",\n    data: {\n      pid: pid\n    },\n    success: function success(response) {\n      $(\"#loadingHistory\").addClass(\"hidden-xxl-down\");\n\n      if (_.isEmpty(response.history)) {\n        $(\"#dataHistory\").html('<div class=\"alert alert-info alert-dismissible\" role=\"alert\">History is empty</div>');\n      } else {\n        _.forEach(response.history, function (value, key) {\n          $(\"#dataHistory\").append('\\\r\n                    <div class=\"list-group\">\\\r\n                        <a class=\"list-group-item flex-column align-items-start\" href=\"javascript:void(0)\">\\\r\n                            <h4 class=\"list-group-item-heading mt-0 mb-5\"> Status : ' + statusBuilder(value.status) + ' </h4>\\\r\n                            <p class=\"mb-0\">' + value.note + '</p> \\\r\n                        </a>' + attachmentFile(value.document_upload) + '\\\r\n                    </div>');\n        });\n      }\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/admin_ticket.js\n");

/***/ }),

/***/ 1:
/*!********************************************!*\
  !*** multi ./resources/js/admin_ticket.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\laragon\www\ticket\resources\js\admin_ticket.js */"./resources/js/admin_ticket.js");


/***/ })

/******/ });